USE sucos_vendas;

# -- FILTROS BÁSICO --

SELECT * FROM tabela_de_produtos;

SELECT CODIGO_DO_PRODUTO, NOME_DO_PRODUTO FROM tabela_de_produtos;

SELECT * FROM tabela_de_produtos WHERE SABOR = 'Manga' AND NOT ( TAMANHO ='470 ml' );

SELECT NOME, CPF, ESTADO, IDADE FROM tabela_de_clientes WHERE IDADE > 18 OR ESTADO = 'SP';

SELECT * FROM tabela_de_clientes WHERE CIDADE IN('Rio de Janeiro', 'São Paulo');

SELECT * FROM tabela_de_clientes WHERE CIDADE IN('Rio de Janeiro', 'São Paulo') AND (IDADE >= 18 AND IDADE <= 25);

SELECT * FROM tabela_de_clientes WHERE NOME LIKE '%Mattos';

SELECT * FROM tabela_de_vendedores;

# -- Outras Fomas de Filtro --

# DISTINCT - Retorna apenas as combinações que não se repetem
SELECT EMBALAGEM, TAMANHO FROM tabela_de_produtos;

SELECT DISTINCT SABOR, EMBALAGEM, TAMANHO FROM tabela_de_produtos WHERE SABOR = 'Laranja';

SELECT DISTINCT BAIRRO, CIDADE FROM tabela_de_clientes WHERE CIDADE = 'Rio de Janeiro';

# LIMIT - Cria um limite na quantidade de dados apresentados
SELECT * FROM tabela_de_produtos LIMIT 5;

SELECT * FROM tabela_de_produtos LIMIT 2, 3; # Exibe o conteúdo da linha 2 e das próximas 3

SELECT * FROM notas_fiscais WHERE DATA_VENDA = '2017-01-01' LIMIT 10;

# ORDER BY - Personalisa a ordem de output do SELECT
SELECT * FROM tabela_de_produtos ORDER BY NOME_DO_PRODUTO;

SELECT * FROM tabela_de_produtos ORDER BY NOME_DO_PRODUTO DESC; # DESC - Decrescente

SELECT * FROM tabela_de_produtos ORDER BY EMBALAGEM, NOME_DO_PRODUTO;

SELECT * FROM tabela_de_produtos ORDER BY EMBALAGEM DESC, NOME_DO_PRODUTO ASC; # ASC - Crescente

SELECT * FROM tabela_de_produtos WHERE NOME_DO_PRODUTO = "Linha Refrescante - 1 Litro - Morango/Limão";

SELECT NUMERO, QUANTIDADE FROM itens_notas_fiscais WHERE CODIGO_DO_PRODUTO = '1101035' ORDER BY QUANTIDADE DESC ;

# GROUP BY - Agrupa os resultados
# (SUM - Soma | MAX - Máximo | MIN - Mínimo | AVG - Média | COUNT - Conta ocorrências)
SELECT ESTADO, SUM(LIMITE_DE_CREDITO) AS LIMITE_TOTAL FROM tabela_de_clientes GROUP BY ESTADO; # AS - Alias

SELECT EMBALAGEM, MAX(PRECO_DE_LISTA) AS MAIOR_PRECO FROM tabela_de_produtos GROUP BY EMBALAGEM;

SELECT EMBALAGEM, COUNT(*) AS CONTADOR FROM tabela_de_produtos GROUP BY EMBALAGEM;

SELECT ESTADO, BAIRRO, SUM(LIMITE_DE_CREDITO) AS LIMITE_TOTAL FROM tabela_de_clientes 
WHERE IDADE > 25 GROUP BY ESTADO, BAIRRO;

SELECT MAX(QUANTIDADE) AS MAIOR_QUANTIDADE FROM itens_notas_fiscais 
WHERE CODIGO_DO_PRODUTO = '1101035';

SELECT COUNT(*) FROM itens_notas_fiscais WHERE CODIGO_DO_PRODUTO = '1101035' AND QUANTIDADE = 99;

# HAVING - Aplica um filtro sobre o resultado de um GROUP BY
SELECT ESTADO, SUM(LIMITE_DE_CREDITO) AS SOMA_LIMITE FROM tabela_de_clientes 
GROUP BY ESTADO HAVING SOMA_LIMITE > 900000;

SELECT EMBALAGEM, MAX(PRECO_DE_LISTA) AS MAIOR_PRECO, MIN(PRECO_DE_LISTA) AS MENOR_PRECO FROM tabela_de_produtos
GROUP BY EMBALAGEM HAVING SUM(PRECO_DE_LISTA) <= 80;

SELECT CPF, COUNT(*) FROM notas_fiscais WHERE YEAR(DATA_VENDA) = '2016' GROUP BY CPF HAVING COUNT(*) >= 2000;

# CASE - Estrutura de condição
SELECT EMBALAGEM, SABOR,
CASE
	WHEN PRECO_DE_LISTA >= 12 THEN 'PRODUTO CARO'
    WHEN PRECO_DE_LISTA >= 7 AND PRECO_DE_LISTA < 12 THEN 'PRODUTO EM CONTA'
    ELSE 'PRODUTO BARATO'
END AS CLASSIFICACAO_DE_PRECO, AVG(PRECO_DE_LISTA) AS PRECO_MEDIO
FROM tabela_de_produtos 
WHERE SABOR = 'Manga'
GROUP BY EMBALAGEM,
CASE
	WHEN PRECO_DE_LISTA >= 12 THEN 'PRODUTO CARO'
    WHEN PRECO_DE_LISTA >= 7 AND PRECO_DE_LISTA < 12 THEN 'PRODUTO EM CONTA'
    ELSE 'PRODUTO BARATO'
END
ORDER BY EMBALAGEM;

SELECT NOME,
CASE
	WHEN YEAR(DATA_DE_NASCIMENTO) < 1990 THEN 'VELHO(A)'
    WHEN YEAR(DATA_DE_NASCIMENTO) >= 1990 AND YEAR(DATA_DE_NASCIMENTO) <= 1995 THEN 'JOVEM'
    WHEN YEAR(DATA_DE_NASCIMENTO) > 1995 THEN 'CRIANCA'
END AS FAIXA_ETARIA
FROM tabela_de_clientes;
